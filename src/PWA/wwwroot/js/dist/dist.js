/*! For license information please see dist.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./src/PWA/wwwroot/js/src/lib/indexedDb.js":()=>{eval("let db;\r\n\r\nwindow.initializeIndexedDb = async () => {\r\n    return new Promise((resolve, reject) => {\r\n        const request = indexedDB.open('WeatherDb', 1);\r\n\r\n        request.onerror = () => reject(request.error);\r\n        request.onsuccess = () => {\r\n            db = request.result;\r\n            resolve();\r\n        };\r\n\r\n        request.onupgradeneeded = (event) => {\r\n            const db = event.target.result;\r\n            if (!db.objectStoreNames.contains('forecasts')) {\r\n                db.createObjectStore('forecasts', { keyPath: 'id', autoIncrement: true });\r\n            }\r\n        };\r\n    });\r\n};\r\n\r\nwindow.saveToIndexedDb = async (storeName, data) => {\r\n    return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(storeName, 'readwrite');\r\n        const store = transaction.objectStore(storeName);\r\n\r\n        // Clear existing data\r\n        store.clear();\r\n\r\n        // Add new data\r\n        data.forEach(item => {\r\n            store.add(item);\r\n        });\r\n\r\n        transaction.oncomplete = () => resolve();\r\n        transaction.onerror = () => reject(transaction.error);\r\n    });\r\n};\r\n\r\nwindow.addToIndexedDb = async (storeName, data) => {\r\n    return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(storeName, 'readwrite');\r\n        const store = transaction.objectStore(storeName);\r\n        const request = store.add(data);\r\n\r\n        request.onsuccess = () => resolve();\r\n        request.onerror = () => reject(request.error);\r\n    });\r\n};\r\n\r\nwindow.getFromIndexedDb = async (storeName) => {\r\n    return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(storeName, 'readonly');\r\n        const store = transaction.objectStore(storeName);\r\n        const request = store.getAll();\r\n\r\n        request.onsuccess = () => resolve(request.result);\r\n        request.onerror = () => reject(request.error);\r\n    });\r\n};\r\n\r\nwindow.removeFromIndexedDb = async (storeName) => {\r\n    return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(storeName, 'readwrite');\r\n        const store = transaction.objectStore(storeName);\r\n        const request = store.remove(data);\r\n    });\r\n};\r\n\r\nwindow.clearIndexedDb = async (storeName) => {\r\n    return new Promise((resolve, reject) => {\r\n        const transation = db.transaction(storeName, 'readwrite');\r\n        const store = transaction.objectStore(storeName);\r\n        const request = store.clear();\r\n    });\r\n};\n\n//# sourceURL=webpack://dotnetpwa/./src/PWA/wwwroot/js/src/lib/indexedDb.js?")},"./src/PWA/wwwroot/js/src/lib/onlineManager.js":()=>{eval("\ufeffdocument.addEventListener(\"DOMContentLoaded\", (event) => {\r\n    window.isOnline = navigator.onLine;\r\n\r\n    window.addEventListener('online', function () {\r\n        console.log(\"online\");\r\n        DotNet.invokeMethodAsync('PWA', 'isOnlineStatusChanged');\r\n        DotNet.invokeMethodAsync('PWA', 'UpdateSQLDb', indexedDB);\r\n        this.window.syncWeatherForecasts()\r\n\r\n    });\r\n\r\n    window.addEventListener('offline', function () {\r\n        console.log(\"offline\");\r\n        DotNet.invokeMethodAsync('PWA', 'isNotOnlineStatusChanged');\r\n    });\r\n});\n\n//# sourceURL=webpack://dotnetpwa/./src/PWA/wwwroot/js/src/lib/onlineManager.js?")},"./src/PWA/wwwroot/js/src/lib/syncManager.js":()=>{eval("window.syncWeatherForecasts = async () => {\r\n    const forecasts = await window.getFromIndexedDb('forecasts');\r\n\r\n    console.log('syncWeatherForecasts', JSON.stringify(forecasts));\r\n\r\n    // do http PUT request to update MS SQL database\r\n    fetch('https://localhost:7092/weatherforecast?GetWeatherForecast?SetWeatherForecast', {\r\n        method: 'PUT', // Specifies the HTTP method\r\n        headers: {\r\n            'Content-Type': 'application/json', // Indicates the type of data sent\r\n        },\r\n        body: JSON.stringify(forecasts), // The payload as a JSON string\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Success:', data);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n        });\r\n\r\n    // if successful, remove from indexedDb\r\n\r\n    //  \r\n}\n\n//# sourceURL=webpack://dotnetpwa/./src/PWA/wwwroot/js/src/lib/syncManager.js?")},"./src/PWA/wwwroot/js/src/src.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/onlineManager.js */ \"./src/PWA/wwwroot/js/src/lib/onlineManager.js\");\n/* harmony import */ var _lib_onlineManager_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_indexedDb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/indexedDb.js */ \"./src/PWA/wwwroot/js/src/lib/indexedDb.js\");\n/* harmony import */ var _lib_indexedDb_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_indexedDb_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_syncManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/syncManager.js */ \"./src/PWA/wwwroot/js/src/lib/syncManager.js\");\n/* harmony import */ var _lib_syncManager_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_syncManager_js__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n// import './../../service-worker.js';\r\n// import './../../service-worker.published.js';\r\n\r\n\r\n\r\n\r\n\r\nnavigator.serviceWorker.register('service-worker.js');\r\n\r\nconsole.log('Hello from src -> dist.js');\r\n\r\n\n\n//# sourceURL=webpack://dotnetpwa/./src/PWA/wwwroot/js/src/src.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(r,{a:r}),r},__webpack_require__.d=(e,r)=>{for(var n in r)__webpack_require__.o(r,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/PWA/wwwroot/js/src/src.js")})();